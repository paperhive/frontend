.badge(@font-size, @padding, @bg-color, @color) {
  background-color: @bg-color;
  border-radius: (@font-size + 2 * @padding) / 2;
  color: white;
  font-size: @font-size;
  font-weight: bold;
  line-height: 1;
  min-width: @font-size + 2 * @padding;
  padding: @padding;
  text-align: center;
  vertical-align: middle;
}

.generate-directions(@name, @property, @value) {
  .@{name}-top {
    @{property}-top: @value;
  }
  .@{name}-bottom {
    @{property}-bottom: @value;
  }
  .@{name}-left {
    @{property}-left: @value;
  }
  .@{name}-right {
    @{property}-right: @value;
  }
  .@{name} {
    @{property}: @value;
  }
}

// no-(padding|border|margin)
.generate-directions(ph-no-padding, padding, 0);
.generate-directions(ph-no-border, border, 0);
.generate-directions(ph-no-margin, margin, 0);

// xs-(padding|border|margin)
.generate-directions(ph-xs-padding, padding, 0.25em);
.generate-directions(ph-xs-border, border, 0.25em);
.generate-directions(ph-xs-margin, margin, 0.25em);

// sm-(padding|border|margin)
.generate-directions(ph-sm-padding, padding, 0.5em);
.generate-directions(ph-sm-border, border, 0.5em);
.generate-directions(ph-sm-margin, margin, 0.5em);

// md-(padding|border|margin)
.generate-directions(ph-md-padding, padding, 1em);
.generate-directions(ph-md-border, border, 1em);
.generate-directions(ph-md-margin, margin, 1em);

// lg-(padding|border|margin)
.generate-directions(ph-lg-padding, padding, 2em);
.generate-directions(ph-lg-border, border, 2em);
.generate-directions(ph-lg-margin, margin, 2em);

// xl-(padding|border|margin)
.generate-directions(ph-xl-padding, padding, 4em);
.generate-directions(ph-xl-border, border, 4em);
.generate-directions(ph-xl-margin, margin, 4em);

// highlight border
.generate-directions(ph-highlight-border, border, @ph-border-height solid @ph-highlight-color);
.generate-directions(ph-panel-border, border, 1px solid @panel-default-border);
.generate-directions(ph-title-border, border, @ph-border-height/4 solid @gray-light);


/* Creatin Box-Shadow */
.box-shadow(@style, @c) when (iscolor(@c)) {
  box-shadow: @style @c;
}
.box-shadow(@style, @alpha: 50%) when (isnumber(@alpha)) {
  .box-shadow(@style, rgba(0,0,0, @alpha));
}

.text-shadow(@position: 0px 3px, @blur: 4px, @color: rgba(0, 0, 0, 0.3)) {
  text-shadow: @position @blur @color;
}

/* Creating Borders */
.border (@width: 1px, @style: solid, @color){
  border: @width @style @color;
}
.border-top (@width: 1px, @style: solid, @color){
  border-top: @width @style @color;
}
.border-right (@width: 1px, @style: solid, @color){
  border-right: @width @style @color;
}
.border-bottom (@width: 1px, @style: solid, @color){
  border-bottom: @width @style @color;
}
.border-left (@width: 1px, @style: solid, @color){
  border-left: @width @style @color;
}

// vertical align
.generate-vertical(@align) {
  .ph-vertical-@{align} {
    vertical-align: @align;
  }
}
.generate-vertical(top);
.generate-vertical(middle);
.generate-vertical(bottom);

.ph-selection(@value) {
  user-select: @value;
  -webkit-touch-callout: @value;
}

.ph-full-width {
  width: 100%;
}

.ph-text-smaller {
  font-size: smaller
}

.ph-text-right-md {
  @media (min-width: @screen-md-min) {
    text-align: right;
  }
}

h1, h2, h3, h4, h5, h6 {
  & > small.ph-newline {
    display: block;
    margin-top: 0.1em;
  }
  &.ph-heading-light {
    font-weight: 300;
  }
}

a.ph-link-icon:hover, a.ph-link-icon:focus,
.btn-link.ph-link-icon:hover, .btn-link.ph-link-icon:focus, {
  text-decoration: none;
}

.ph-badge-left {
  position: fixed;
  left: 0;
  top: 90%;
  z-index: @zindex-navbar-fixed;
  transform-origin: left top 0;
  -webkit-transform-origin: left top 0;
  -moz-transform-origin: left top 0;
  -o-transform-origin: left top 0;
  transform: rotate(-90deg);
  -webkit-transform: rotate(-90deg);
  -moz-transform: rotate(-90deg);
  -o-transform: rotate(-90deg);
}

.ph-badge-bottom {
  position: fixed;
  bottom: 0;
  right: 15px;
  z-index: @zindex-navbar-fixed;
 }

ul.ph-ul-md-spacing {
  > li {
    padding-bottom: 0.3em;
  }
}

.ph-img-hover {
  transition: background-color 0.5s ease;
  &:hover {
    background-color: #eee;
  }
}

.ph-flex {
  display: flex;
}

.ph-flex-grow {
  flex-grow: 1;
}

.ph-grow-container {
  display: flex;
}

.ph-grow-item {
  flex-grow: 1;
  overflow: hidden;
  text-overflow: ellipsis;
}

.ph-text-overflow {
  .text-overflow();
}

.ph-hidden {
  visibility: hidden;
}

.ph-input-has-icon {
  position: relative;

  // padding for left icon
  &.ph-input-has-icon-left > .form-control {
    padding-left: @input-height-base;
    &.input-lg {
      padding-left: @input-height-large;
    }
    &.input-sm {
      padding-left: @input-height-small;
    }
  }

  // padding for right icon
  &.ph-input-has-icon-right > .form-control {
    padding-right: @input-height-base;
    &.input-lg {
      padding-right: @input-height-large;
    }
    &.input-sm {
      padding-right: @input-height-small;
    }
  }

  // icon basics
  > .ph-input-icon {
    height: @input-height-base;
    width: @input-height-base;
    line-height: @input-height-base;

    position: absolute;
    top: 0;
    pointer-events: none;
    text-align: center;

    &.ph-input-icon-left {
      left: 0;
    }
    &.ph-input-icon-right {
      right: 0;
    }
  }

  // large input
  > .input-lg ~ .ph-input-icon {
    height: @input-height-large;
    width: @input-height-large;
    line-height: @input-height-large;
  }

  // small input
  > .input-sm ~ .ph-input-icon {
    height: @input-height-small;
    width: @input-height-small;
    line-height: @input-height-small;
  }
}
